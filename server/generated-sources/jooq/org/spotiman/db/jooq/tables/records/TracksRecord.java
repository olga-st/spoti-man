/*
 * This file is generated by jOOQ.
 */
package org.spotiman.db.jooq.tables.records;


import org.jooq.impl.TableRecordImpl;
import org.spotiman.db.jooq.tables.Tracks;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TracksRecord extends TableRecordImpl<TracksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tracks.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tracks.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.tracks.album_id</code>.
     */
    public void setAlbumId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tracks.album_id</code>.
     */
    public String getAlbumId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tracks.bpm</code>.
     */
    public void setBpm(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tracks.bpm</code>.
     */
    public Integer getBpm() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TracksRecord
     */
    public TracksRecord() {
        super(Tracks.TRACKS);
    }

    /**
     * Create a detached, initialised TracksRecord
     */
    public TracksRecord(String id, String albumId, Integer bpm) {
        super(Tracks.TRACKS);

        setId(id);
        setAlbumId(albumId);
        setBpm(bpm);
        resetTouchedOnNotNull();
    }
}
